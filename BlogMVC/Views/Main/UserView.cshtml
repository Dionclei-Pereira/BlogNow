@model BlogMVC.Models.User;

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
    <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />
    </head>
    <body>
    @Html.AntiForgeryToken();
    <div class="sidebar">
        <h2>Menu</h2>
        <ul>
            <li><a asp-action="Create" asp-controller="Main">Create a Post</a></li>
            <li><a asp-action="Following" asp-controller="Main">Following</a></li>
            <li><a asp-action="Followed" asp-controller="Main">Followed</a></li>
        </ul>
    </div>
    <br />
    <br />
    <br />
    @{
        string Email = "";
        if (Model != null)
        {
            ViewData["Title"] = Model.NickName;
            Email = User.Identity.Name;
            Model.Posts = Model.Posts.OrderByDescending(d => d.Date).ToList();
        }
    }
    <h1>@ViewData["Title"]</h1>
    <h6>@Model.UserName</h6>
    <p>Followers: 
        <span class="follow-number">@Model.Followed.Count()</span>
        @if (User.Identity.IsAuthenticated){
            if (Model.Email != User.Identity.Name && User.Identity.Name != null)
            {
                <button class="follow-btn">Follow</button>
            }
        }
    </p>
    <br />
    @if (Model.Posts != null)
    {
        foreach (var post in Model.Posts)
        {
            <div class="Post">
                <div class="User">
                    <a class="user" asp-action="UserView" asp-route-id="@post.Owner">@Html.DisplayFor(modelItem => post.Owner)</a>
                </div>
                <div class="Comment">
                    <p>@Html.DisplayFor(ModelItem => post.Message)</p>
                    <div class="Like">
                        @if (post.likedpeople.FirstOrDefault(x => x.PersonalEmail == User.Identity.Name) != null)
                        {
                            <button class="heart-liked" data-postid="@post.Id"></button>
                        }
                        else
                        {
                            <button class="heart" data-postid="@post.Id"></button>
                        }
                        <p class="like-count">Likes: <span id="likes-count-@post.Id">@post.Likes</span></p>
                        @if (Model.Email == User.Identity.Name) {
                            <form action="@Url.Action("DeletePost", "Main")" method="post">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="owner" value="@Email" />
                                <input type="hidden" name="id" value="@post.Id" />
                                <button class="delete-btn" type="submit" onclick="return confirm('Are you sure?')">Delete</button>
                            </form>
                            }
                    </div>
                    <p>@post.Date.ElapsedTime()</p>
                </div>
            </div>
            <br />
            <br />
        }
    }
    <script>
        //follow
        document.addEventListener("DOMContentLoaded", () => {
            const follow = document.querySelector(".follow-btn");
            const value = document.querySelector(".follow-number");
            follow.addEventListener("click", () => {
                const params = new URLSearchParams();
                const token = document.querySelector('input[name = "__RequestVerificationToken"]').value;
                params.append("email", "@User.Identity.Name");
                params.append("target", "@Model.Email");
                params.append("follow", value.textContent);
                fetch("/Main/Follow", {
                    method: "post",
                    headers: {
                        'Content-Type': "application/x-www-form-urlencoded",
                        'RequestVerificationToken': token
                    },
                    body: params.toString()
                }).then(response => response.json())
                .then(response => {
                    if (response.error) {
                        alert(response.error);
                        return;
                    }
                    value.textContent = response.followers;
                }).catch(() => {
                    alert("Error");
                })
            })
        })


        //
        window.email = "@User.Identity.Name";
    </script>
    <script src="~/js/like.js"></script>
    </body>
</html>

