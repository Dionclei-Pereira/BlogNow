@model BlogMVC.Models.User;

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
    <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />
    </head>
    <body>
    @Html.AntiForgeryToken();
    @await Html.PartialAsync("_SidebarMenu")
    <br />
    <br />
    <br />
    @{
        string Email = "";
        if (Model != null)
        {
            ViewData["Title"] = Model.NickName;
            Email = User.Identity.Name;
            Model.Posts = Model.Posts.OrderByDescending(d => d.Date).ToList();
        }
    }
    <h1>@ViewData["Title"]</h1>
    <h6>@Model.UserName</h6>
    <p>Followers: 
        <span class="follow-number">@Model.Followed.Count()</span>
        @if (User.Identity.IsAuthenticated){
            if (Model.Email != User.Identity.Name && User.Identity.Name != null)
            {
                <button class="follow-btn">Follow</button>
            }
        }
    </p>
    <br />
    @await Html.PartialAsync("_PostList", new BlogMVC.Models.ViewModels.PostListViewModel() {
        Posts = Model.Posts,
        Email = Model.Email
    })
    <script>
        //follow
        document.addEventListener("DOMContentLoaded", () => {
            const follow = document.querySelector(".follow-btn");
            const value = document.querySelector(".follow-number");
            follow.addEventListener("click", () => {
                const params = new URLSearchParams();
                const token = document.querySelector('input[name = "__RequestVerificationToken"]').value;
                params.append("email", "@User.Identity.Name");
                params.append("target", "@Model.Email");
                params.append("follow", value.textContent);
                fetch("/Main/Follow", {
                    method: "post",
                    headers: {
                        'Content-Type': "application/x-www-form-urlencoded",
                        'RequestVerificationToken': token
                    },
                    body: params.toString()
                }).then(response => response.json())
                .then(response => {
                    if (response.error) {
                        alert(response.error);
                        return;
                    }
                    value.textContent = response.followers;
                }).catch(() => {
                    alert("Error");
                })
            })
        })


        //
        window.email = "@User.Identity.Name";
    </script>
    <script src="~/js/like.js"></script>
    </body>
</html>

